name: Release

on:
    push:
        tags:
            - "v*"

jobs:
    build-windows:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v3
            - name: Build
              run: cargo build --verbose --release
            - name: Upload executable
              uses: actions/upload-artifact@v3
              with:
                  name: rua-windows
                  path: target/release/rua.exe

    build-linux:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Build
              run: cargo build --verbose --release
            - name: Upload executable
              uses: actions/upload-artifact@v3
              with:
                  name: rua-linux
                  path: target/release/rua

    create-release:
        runs-on: ubuntu-latest
        needs: [build-windows, build-linux]
        steps:
            - name: Download all artifacts
              uses: actions/download-artifact@v3
              with:
                  path: dist
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref_name }}-${{ github.sha }}
                  release_name: Release ${{ github.ref_name }}
                  draft: false
                  prerelease: false
            - name: Upload Release Asset - Windows
              id: upload-release-asset-windows
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: dist/rua-windows/rua.exe
                  asset_name: rua-windows.exe
                  asset_content_type: application/octet-stream
            - name: Upload Release Asset - Linux
              id: upload-release-asset-linux
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: dist/rua-linux/rua
                  asset_name: rua-linux
                  asset_content_type: application/octet-stream
